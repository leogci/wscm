package com.gci.siarp.generales.ui;

import java.io.Serializable;
import java.util.Date;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Validator.InvalidValueException;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.PopupDateField;

public class DWddCalendar extends CustomComponent {
	
	public static interface ObjectListener extends Serializable {

		/**
		 * Este método es llamado cuando se agrega un nuevo registro.
		 * 
		 * @param domainObjectToAdd
		 *            registro a agregar.
		 */
		Integer itemChanged(Date adfecha);
	}

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private PopupDateField dF_fecha;
	
	private String isItemStatus;
	private Date iValue;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	ObjectListener listener;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DWddCalendar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		dF_fecha.addValueChangeListener(this::eventCambia);
	}
	
	private void eventCambia(ValueChangeEvent event){
		
		if (listener.itemChanged((Date) event.getProperty().getValue())==-1){
			dF_fecha.setValue(iValue);
		}else{
			iValue=(Date) event.getProperty().getValue();
			cambiarEstado();
		}
	}
	
	public void init(Date adFecha,Boolean abnNew){
		iValue=adFecha;
		dF_fecha.setValue(adFecha);
		if (abnNew)
			isItemStatus="NotMofified";
		else
			isItemStatus="New";
	}
	
	private void cambiarEstado(){
		 if (isItemStatus.equals("New") || isItemStatus.equals("NewModified")){
	        	isItemStatus="NewModified";
	        }else
	        	isItemStatus="Modified";
	}
	
	public Integer setItemDate(Date adFecha){
		iValue=adFecha;
		dF_fecha.setValue(adFecha);
		cambiarEstado();
		return 1;
	}
	
	public Date getItemDate(){
		try {
			dF_fecha.validate();
			return dF_fecha.getValue();
		}catch (InvalidValueException E){
			Notification.show("El valor digitado no es válido");
			return null;
		}		
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// dF_fecha
		dF_fecha = new PopupDateField();
		dF_fecha.setImmediate(false);
		dF_fecha.setWidth("-1px");
		dF_fecha.setHeight("-1px");
		mainLayout.addComponent(dF_fecha);
		
		return mainLayout;
	}

}
